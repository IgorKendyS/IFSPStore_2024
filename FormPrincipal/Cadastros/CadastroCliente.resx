<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAADAkAAAJNU0Z0AUkBTAIBAQIB
        AAEIAQABCAEAARgBAAEYAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFgAwABGAMAAQEBAAEgBgAB
        JBIAAwUBBgMAAf8DAAH/AwAB/wMbASdUAAM1AXcDKgG5AyoBuQMqAbkDKgG5AyoBuQMqAbkDKgG5AyoB
        uQMqAbkDKgG5AyoBuQMqAbkDKgG5AyoBuQMyAZnYAAMdAdUDAQH+BAADHAHXAwAB/wMbASdMAAMQAeoD
        MQGfAxwBKQMcASkDHAEpAxwBKQMcASkDHAEpAxwBKQMcASkDHAEpAxwBKQMcASkDHAEpAxwBKQMcASkD
        MgFhAwAB/9QAAxQB5AMHAfcIAAMcAdcDAAH/AxwBKEsAAf8nAAH/AxAB6wMyAWMQAAMnAcADHAEp0AAD
        EgEYAwAB/wMdAdYIAAMcAdcDAAH/AxsBJ0cAAf8kAAMXAeADGwEnAzMBkwMAAf8DBwH2CAADLQGvAyIB
        NNQAAxwBKAMAAf8DHQHWCAADHAHXAwAB/wMbASdDAAH/JAADLgFTAzABpAMxAV4DBAH6AzQBcQMHAfcE
        AAMtAa8DIgE02AADHAEoAwAB/wMdAdYIAAMcAdcDAAH/AxwBKD8AAf8rAAH/AwQB+ggAAzQBcQMHAfYD
        LQGvAyIBNNwAAxwBKAMAAf8DHQHWCAADHAHXAwAB/wMbASc7AAH/BwAB/wMAAf8DAAH/AzMBmAMLAQ4D
        NAFuAzQBbgM0AW4EAAMNAe4DNQGJDAADNAFxAwAB/wMiATTgAAMcASgDAAH/AxwB1wgAAxwB1wMAAf8D
        GwEnBAAEAQMzAWoDLgGtAy0BrwM0AXYDBgEHGwAB/wQAAwoB8wQAAygBQAMxAaEDDAEQAzQBdgM0AXYD
        NAF2CAADDQHuAzUBiQwAAzQBcQMHAfbkAAMcASgDAAH/AxwB1wgAAxwB1wMAAf8DBgH4AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwEB/gMaASUTAAH/BAADCgHzBAADKAFAAzEBoQMYASIDMAGmAzABpgMwAaYD
        MAGmAzQBbAQAAw0B7gM1AYkMAAM0AXEDBwH25AADHAEoAwAB/wMdAdYEAAMwAVoDAAH/AwQB+gMYASEQ
        AAMLAQ4DEAHqAwAB/wM0AZQPAAH/BwAB/wMAAf8DAAH/AzQBjAMCAQMDJwE+AycBPgMnAT4DJwE+AxQB
        GwgAAw0B7gM1AYkMAAM0AXEDBwH25AADHAEoAwAB/wMYAd0DAAH/AzABpyAAAzMBawMAAf8DNQF4CwAB
        /zgAAw0B7gM1AYkIAAQBAwAB/wMHAffkAAMcASgDAAH/AyEBzSgAAzQBjgMAAf8DAgEDBwAB/wQAAwsB
        8QMLAfEDCwHxAzMBaSgAAw0B7gM1AYkEAQMAAf8DHgEsAzMBlgM1AXzgAAM1AYYDAAH/MwAB/wMiAcsH
        AAH/BAADCgHzBAADKAFAAzEBoQMnAT4DFAHlAxQB5QMUAeUDBAEFGAADDAHvAwAB/wMeASwEAAMnAT4D
        LwGs4wAB/wMnAcEwAAM1AXsDAAH/BwAB/wQAAwoB8wQAAygBQAMxAaEEAQMkATgDJAE4AyQBOAMkATgD
        EQEWFAADLQGvAwIB/AMvAawDLQFQAwAB/wMLAQ7jAAH/AysBSDAAAwUBBgMAAf8HAAH/BwAB/wMAAf8D
        AAH/AzIBoAMaASUDLwGsAy8BrAMvAawDLwGsAzQBchQAAy0BrwMjATYDMwFpAzIBoAMKAQ3nAAH/AxUB
        HTcAAf8HAAH/QAADLQGvAyMBNvMAAf8DJwE+MAAEAQMAAf8HAAH/BAADNQGGAzUBhgM1AYYDHAEoLAAD
        LQGvAyMBNvMAAf8DLwGrMAADMgFlAwAB/wcAAf8EAAMHAfcDMQFeAzUBhgMxAaEDMwFoAwAB/wMAAf8D
        AAH/AwkBDAwAAzUBgQMxAaMDMQGjAxUB4gMjATbwAAMxAaIDAAH/CAADJwHBAxQB4xAAAzIBnQMBAf4I
        AAMBAf4DFAHkBwAB/wQAAwoB8wQAAygBQAMxAaEfAAH/AzUBfAMoAUADNAGMAwEB/vsAAf8DMgGgBAAD
        FAEbAwAB/wMAAf8DCgHyAxQB5AMAAf8DAAH/AzIBYgQAAzABWgMAAf8DDAEPBwAB/wQAAwIB/QMcAdcD
        FgHhAzEBoQMvAVcDAAH/AwAB/wMAAf8DAAH/AyAB0AMVAR0DIAHQBAADLAFMAwEB/vwAAzMBaQMAAf8D
        MgFjCAADNAF0AxMB5gMLAfEDMwGXBAEEAAMhATIDAAH/Ay4BrQsAAf8EAAMLAQ4DCwEOAwsBDhwAAx0B
        KgMpAbsDLAFMAwEB/v8ABQADMgGbAwAB/wMcAdcEARQAAywBswMAAf8DIQHNDwAB/ywAAx0BKgMSAecD
        AQH+/wANAAMkATgDAAH/AwAB/wMAAf8DFgHhAxgB3QMAAf8DAAH/AwAB/wMyAWIQAAMkATgDAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAgH9/wAZAAMdASoDLQGvAwsB
        8QMJAfQDKQG8AygBQP8ANQABQgFNAT4HAAE+AwABKAMAAWADAAEYAwABAQEAAQEFAAEgAQEWAAP/AQAB
        BwL/AcABAAE/BgABIwL/AYABAAEfBgABMQL/Ab8B4wHPBgABGAL/Ab8B4AHPBgABjAF/Af8BvwHgAU8G
        AAHGAT8B/wG/AfMBDwYAAeMBHwH/AaABEwGPBgAB8QGIAR8BqAEZAc8GAAH4AcABBwGoAQQB5wYAAfwB
        QwHDAaABBgFzBgAB/gEPAfEBvwH/ATEGAAH/AR8B+AGhAf8BgAYAAf8BPwH8AagBDwHEBgAB/wE/AfwB
        qAEHAcAGAAH/AT8B/AGgAQcBwQYAAf8BPwH+Ab8B/wHPBgAB/wE/AfwBoQH/Ac8GAAH/AT8B/AGgAQ4B
        DwYAAf8BMwHMAakB/AEfBgAB/wGQAQgBoAEBAT8GAAH/AYwBEQGjAfgBfwYAAf8BwwHjAb8B+AH/BgAB
        /wHgAQcBgAEBAf8GAAH/AfgBHwP/BgAL
</value>
  </data>
</root>