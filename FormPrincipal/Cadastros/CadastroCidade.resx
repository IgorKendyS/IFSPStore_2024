<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAADAkAAAJNU0Z0AUkBTAIBAQIB
        AAFAAQABQAEAARgBAAEYAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFgAwABGAMAAQEBAAEgBgAB
        JBIAAwUBBgMAAf8DAAH/AwAB/wMcASdUAANDAXcDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cB
        uQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNPAZnYAANbAdUDCAH+BAADWQHXAwAB/wMcASdMAANIAeoD
        UAGfAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkD
        OgFhAwAB/9QAA08B5AMqAfcIAANZAdcDAAH/Ax0BKEsAAf8nAAH/A0wB6wM7AWMQAANZAcADHQEp0AAD
        EgEYAwAB/wNZAdYIAANZAdcDAAH/AxwBJ0cAAf8kAANVAeADHAEnA00BkwMAAf8DKQH2CAADVQGvAyQB
        NNQAAx0BKAMAAf8DWQHWCAADWQHXAwAB/wMcASdDAAH/JAADNAFTA1EBpAM5AV4DHAH6A0ABcQMqAfcE
        AANVAa8DJAE02AADHQEoAwAB/wNZAdYIAANZAdcDAAH/Ax0BKD8AAf8rAAH/AxwB+ggAA0ABcQMpAfYD
        VQGvAyQBNNwAAx0BKAMAAf8DWQHWCAADWQHXAwAB/wMcASc7AAH/BwAB/wMAAf8DAAH/A04BmAMLAQ4D
        PwFuAz8BbgM/AW4EAANCAe4DSgGJDAADQAFxAwAB/wMkATTgAAMdASgDAAH/A1kB1wgAA1kB1wMAAf8D
        HAEnBAAEAQM+AWoDVQGtA1UBrwNDAXYDBgEHGwAB/wQAAzYB8wQAAyoBQANRAaEDDAEQA0MBdgNDAXYD
        QwF2CAADQgHuA0oBiQwAA0ABcQMpAfbkAAMdASgDAAH/A1kB1wgAA1kB1wMAAf8DIwH4AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwgB/gMbASUTAAH/BAADNgHzBAADKgFAA1EBoQMZASIDUwGmA1MBpgNTAaYD
        UwGmAz8BbAQAA0IB7gNKAYkMAANAAXEDKQH25AADHQEoAwAB/wNZAdYEAAM3AVoDAAH/AxwB+gMYASEQ
        AAMLAQ4DSAHqAwAB/wNOAZQPAAH/BwAB/wMAAf8DAAH/A0sBjAMCAQMDKQE+AykBPgMpAT4DKQE+AxQB
        GwgAA0IB7gNKAYkMAANAAXEDKQH25AADHQEoAwAB/wNXAd0DAAH/A1MBpyAAAz4BawMAAf8DRAF4CwAB
        /zgAA0IB7gNKAYkIAAQBAwAB/wMqAffkAAMdASgDAAH/A1sBzSgAA0wBjgMAAf8DAgEDBwAB/wQAAzwB
        8QM8AfEDPAHxAz0BaSgAA0IB7gNKAYkEAQMAAf8DHwEsA04BlgNFAXzgAANJAYYDAAH/MwAB/wNZAcsH
        AAH/BAADNgHzBAADKgFAA1EBoQMpAT4DUQHlA1EB5QNRAeUDBAEFGAADPgHvAwAB/wMfASwEAAMpAT4D
        VQGs4wAB/wNZAcEwAANEAXsDAAH/BwAB/wQAAzYB8wQAAyoBQANRAaEEAQMmATgDJgE4AyYBOAMmATgD
        EQEWFAADVQGvAxAB/ANVAawDMwFQAwAB/wMLAQ7jAAH/Ay4BSDAAAwUBBgMAAf8HAAH/BwAB/wMAAf8D
        AAH/A1IBoAMbASUDVQGsA1UBrANVAawDVQGsA0EBchQAA1UBrwMlATYDPQFpA1IBoAMKAQ3nAAH/AxUB
        HTcAAf8HAAH/QAADVQGvAyUBNvMAAf8DKQE+MAAEAQMAAf8HAAH/BAADSQGGA0kBhgNJAYYDHQEoLAAD
        VQGvAyUBNvMAAf8DVAGrMAADOwFlAwAB/wcAAf8EAAMqAfcDOQFeA0kBhgNRAaEDPQFoAwAB/wMAAf8D
        AAH/AwkBDAwAA0YBgQNSAaMDUgGjA1IB4gMlATbwAANRAaIDAAH/CAADWQHBA1MB4xAAA1ABnQMIAf4I
        AAMIAf4DTwHkBwAB/wQAAzYB8wQAAyoBQANRAaEfAAH/A0UBfAMqAUADSwGMAwgB/vsAAf8DUgGgBAAD
        FAEbAwAB/wMAAf8DOQHyA08B5AMAAf8DAAH/AzoBYgQAAzcBWgMAAf8DDAEPBwAB/wQAAxAB/QNZAdcD
        VgHhA1EBoQM2AVcDAAH/AwAB/wMAAf8DAAH/A1sB0AMVAR0DWwHQBAADMAFMAwgB/vwAAz0BaQMAAf8D
        OwFjCAADQgF0A1EB5gM8AfEDTgGXBAEEAAMjATIDAAH/A1UBrQsAAf8EAAMLAQ4DCwEOAwsBDhwAAx4B
        KgNZAbsDMAFMAwgB/v8ABQADTwGbAwAB/wNZAdcEARQAA1YBswMAAf8DWwHNDwAB/ywAAx4BKgNQAecD
        CAH+/wANAAMmATgDAAH/AwAB/wMAAf8DVgHhA1cB3QMAAf8DAAH/AwAB/wM6AWIQAAMmATgDAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DEAH9/wAZAAMeASoDVQGvAzwB
        8QMwAfQDVwG8AyoBQP8ANQABQgFNAT4HAAE+AwABKAMAAWADAAEYAwABAQEAAQEFAAEgAQEWAAP/AQAB
        BwL/AcABAAE/BgABIwL/AYABAAEfBgABMQL/Ab8B4wHPBgABGAL/Ab8B4AHPBgABjAF/Af8BvwHgAU8G
        AAHGAT8B/wG/AfMBDwYAAeMBHwH/AaABEwGPBgAB8QGIAR8BqAEZAc8GAAH4AcABBwGoAQQB5wYAAfwB
        QwHDAaABBgFzBgAB/gEPAfEBvwH/ATEGAAH/AR8B+AGhAf8BgAYAAf8BPwH8AagBDwHEBgAB/wE/AfwB
        qAEHAcAGAAH/AT8B/AGgAQcBwQYAAf8BPwH+Ab8B/wHPBgAB/wE/AfwBoQH/Ac8GAAH/AT8B/AGgAQ4B
        DwYAAf8BMwHMAakB/AEfBgAB/wGQAQgBoAEBAT8GAAH/AYwBEQGjAfgBfwYAAf8BwwHjAb8B+AH/BgAB
        /wHgAQcBgAEBAf8GAAH/AfgBHwP/BgAL
</value>
  </data>
</root>