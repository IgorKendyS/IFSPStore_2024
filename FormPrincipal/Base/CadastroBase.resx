<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAANhIAAAJNU0Z0AUkBTAIBAQQB
        AAFwAQABcAEAARgBAAEYAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFgAwABMAMAAQEBAAEgBgAB
        SP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/AP8A/wD/ADYAAwUBBgMAAf8DAAH/AwAB/wMcASdUAANDAXcDVwG5A1cBuQNXAbkDVwG5A1cB
        uQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNPAZnYAANfAdUDDgH+BAADXgHXAwAB
        /wMcASdMAANWAeoDUAGfAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkD
        HQEpAx0BKQMdASkDOgFhAwAB/5QAAwgBCgMWAR0DEQEWAwsBDgM2AVcDFgEdAw8BFCQAA1sB5AM6AfcI
        AANeAdcDAAH/Ax0BKEsAAf8nAAH/A1oB6wM7AWMQAANZAcADHQEpMAADDwEUA1UBsQMZASMEAAMWAR4D
        UwGnA1YB7QMlATdAAAMjATMDNQFVAzkBXQMoATsDOAFcAx4BKwMzAVEkAAMSARgDAAH/A1wB1ggAA14B
        1wMAAf8DHAEnRwAB/yQAA2AB4AMcAScDTQGTAwAB/wM3AfYIAANVAa8DJAE0LAAEAgNVAbQDUgGjBAED
        LQFEA18B1QM/AW4DGQEjRAADFAEbAyABLQMTARoDDAEPAx0BKQMOARIDGwElAxMBGiQAAx0BKAMAAf8D
        XAHWCAADXgHXAwAB/wMcASdDAAH/JAADNAFTA1EBpAM5AV4DIgH6A0ABcQM6AfcEAANVAa8DJAE0LAAD
        OQFfA14B3QMMARADOgFgA14B4gMTARoEAgM4BFsBxQNMAfIDXAHIAzMBUTQAAygBPAMiATEBOwI8AWQD
        LAFDAzgBXAMwAUoDKAE8Ay4BRygAAx0BKAMAAf8DXAHWCAADXgHXAwAB/wMdASg/AAH/KwAB/wMiAfoI
        AANAAXEDNwH2A1UBrwMkATQgAANEAXgDOQFfBAADXgHSAzABSgMUARsDSgHzAyABLQMOARIDWQHAA1cB
        vAMwAUoDDAQQARUDEgEYIAADAgEDAxYBHQMWAR0DFgEdAxYBHQMhAS8DJAE0AxsBJQMWAR0DFgEdAxYB
        HQMWAR0DFgEdAxYBHQMWAR0DFgEdAxYBHQMEAQUYAAMdASgDAAH/A1wB1ggAA14B1wMAAf8DHAEnOwAB
        /wcAAf8DAAH/AwAB/wNOAZgDCwEOAz8BbgM/AW4DPwFuBAADVQHuA0oBiQwAA0ABcQMAAf8DJAE0IAAD
        WQHGAx0BKQMjATMDYAHgBAEDSgGJA0kBhgQAA1EBoQNOAZcEAQMPARMDOQFeA0YBfwM0AVMwAAMSARgD
        EAEVAwwBEAMOARIDBgQHAQkDDgESAxQBGwMJAQsDDwETLAADHQEoAwAB/wNeAdcIAANeAdcDAAH/AxwB
        JwQABAEDPgFqA1UBrQNVAa8DQwF2AwYBBxsAAf8EAANKAfMEAAMqAUADUQGhAwwBEANDAXYDQwF2A0MB
        dggAA1UB7gNKAYkMAANAAXEDNwH2HAADBgEIA1kB6QQAA0IBdANMAY4EAANgAeADHAEnAxsBJQNcAdkE
        AgMlATcDWQHoA0kBhwNQAZ0DUAHvA0YBgSwAAx8BLAMvAUkDOwFjAyUBNgMqAT8DLAFDAzUBVQMtAUQD
        NgFYAyUBNzAAAx0BKAMAAf8DXgHXCAADXgHXAwAB/wM4AfgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        DgH+AxsBJRMAAf8EAANKAfMEAAMqAUADUQGhAxkBIgNTAaYDUwGmA1MBpgNTAaYDPwFsBAADVQHuA0oB
        iQwAA0ABcQM3AfYYAAMbASYDXQHJBAADTQGSAz8BbQMEAQUDSgHzBAADQgF1A0oBigQAA1kBwQMwAUoD
        AgEDAw8BEwMVAR0DKgH5AwwBDyQAAwYBBwMSARgDGwElAxEBFgMDAQQDFQEcAxEBFgMFAQYDDAEPAwoB
        DQMJAQwDCwEOMAADHQEoAwAB/wNcAdYEAAM3AVoDAAH/AyIB+gMYASEQAAMLAQ4DVgHqAwAB/wNOAZQP
        AAH/BwAB/wMAAf8DAAH/A0sBjAMCAQMDKQE+AykBPgMpAT4DKQE+AxQBGwgAA1UB7gNKAYkMAANAAXED
        NwH2FAADIQEwA1oBxwQAA1ABnwM8AWYDCQEMA0MB9AQAAzMBUAMoATsDBAEFA0MB9AMEAQUDNgFXA1AB
        nAQAA14B0gMeASskAANKAYsDNgFYA1ABnANIAYQDSQGGA00BkwM7AWUDWAG4A0QBeQNPAZsDSgGKAzEB
        TTQAAx0BKAMAAf8DXgHdAwAB/wNTAacgAAM+AWsDAAH/A0QBeAsAAf84AANVAe4DSgGJCAAEAQMAAf8D
        OgH3EAADEwEaA10B3AQAA0IBdANPAZkEAANaAccDPQFoBAEDAwEEA04BmANaAb8EAANJAYcDRwGDBAAD
        WgHrAxABFRwABAEDAgEDAz0BZwMvAUkDPAFmAzoBYQM5AV8DOgFhAyoBQANGAYADHQEoA0UBfAMqAT8D
        DQERAwUBBjQAAx0BKAMAAf8DWwHNKAADTAGOAwAB/wMCAQMHAAH/BAADUQHxA1EB8QNRAfEDPQFpKAAD
        VQHuA0oBiQQBAwAB/wMfASwDTgGWA0UBfBAAA10B3wMQARUDEgEYA1oB6wMRARYDEgEXA1sBygNbAeQD
        VgHqA18B1QMdASkDDwEUA1oB6wMeASsDIQEwA10B3yAAAxsBJQNKAYoDRQF8A0kBhQNTAaYDJwE6AzMB
        UgNBAXMDPwFsAi0BLgFGA0UBfAMpAT4DPwFsA0IBdQNEAXsDFwEfMAADSQGGAwAB/zMAAf8DXAHLBwAB
        /wQAA0oB8wQAAyoBQANRAaEDKQE+A18B5QNfAeUDXwHlAwQBBRgAA1AB7wMAAf8DHwEsBAADKQE+A1UB
        rBAAA0YBgQNHAYMEAANBAXIDWQG+AwwBEAQBAx0BKQMZASMEAAMPARMDXAHZA0gBhAQAA1YBtgNIAYQg
        AAMTARoDOwFjAzkBXwMzAVADRAF5AjABMQFMAz0BaAM4AVwDRgF9AzoBYQMdASkDOAFbA0YBfQM2AVkD
        PwFtAwwBDzMAAf8DWQHBMAADRAF7AwAB/wcAAf8EAANKAfMEAAMqAUADUQGhBAEDJgE4AyYBOAMmATgD
        JgE4AxEBFhQAA1UBrwMcAfwDVQGsAzMBUAMAAf8DCwEOEAADBwEJA18B2gMeASoEAANAAW8DXgHiA0QB
        eAMzAVADOgFiA1QBqwNaAesDSgGKAwMBBANEAXkDWwHkAwgBCjAAAwgBCgMZASIDDwEUAxcBHwMYASFP
        AAH/Ay4BSDAAAwUBBgMAAf8HAAH/BwAB/wMAAf8DAAH/A1IBoAMbASUDVQGsA1UBrANVAawDVQGsA0EB
        chQAA1UBrwMlATYDPQFpA1IBoAMKAQ0QAANRAaQDCwEOAygBPANeAdIDIQEvBAADFQEcAz8BbANSAaUD
        WQHAA04BlQMVAR0EAAM/AWwDKgH5AyMBMgMNAREDQQFzLAADOAFcATYBmQE3Af8BUwFVAVMBqgFMAXAB
        TAH1ATYBmQE3Af8DCAEKSwAB/wMVAR03AAH/BwAB/0AAA1UBrwMlATYcAAM7AWUDWQHBAwQBBQMSARgD
        VgGzA00BkgMaASQMAAMKAQ0DPQFnA1sBygNVAe4DKgE/AwUBBgNaAccDOwFlLAADJwE6A1UBrQNAAW8D
        UgGjAVMBVQFTAaoDDAEQAxEBFgMGAQdDAAH/AykBPjAABAEDAAH/BwAB/wQAA0kBhgNJAYYDSQGGAx0B
        KCwAA1UBrwMlATYgAANCAXQDWAG4AxIBFwQAAyYBOANVAa4DWwHeA1sBygNeAdcDKgH5A2AB2wNNAZMD
        DwQTARoDVwG5A0ABcTAAAzgBWwE2AZkBNwH/AVMBVQFTAaoBTAFwAUwB9QE2AZkBNwH/AVABUQFQAZ8B
        NgGZATcB/wE9AT4BPQFpQwAB/wNUAaswAAM7AWUDAAH/BwAB/wQAAzoB9wM5AV4DSQGGA1EBoQM9AWgD
        AAH/AwAB/wMAAf8DCQEMDAADRgGBA1IBowNSAaMDXgHiAyUBNiQAAy0BRgNgAdsDQAFxAxIBGAgAAx4B
        KgMeASsDBAEFBAADEwEaA0IBdQNbAdgDKwFBNAADKAE8AVUBVgFVAa4BQAJBAXEBUgFTAVIBpQNVAa0D
        PQFoAVMBVQFTAaoDLQFEQAADUQGiAwAB/wgAA1kBwQNdAeMQAANQAZ0DDgH+CAADDgH+A1sB5AcAAf8E
        AANKAfMEAAMqAUADUQGhHwAB/wNFAXwDKgFAA0sBjAMOAf4sAAMRARYDRwGDA1wB5wNcAcgDUwGnA0oB
        iwNLAY0DUwGnA1sBygNbAeQDRgGBAxABFTgAAzcBWgFAAZkBQAH9AVIBVAFSAagBVAFxAVQB8wFAAZkB
        QAH9AwcBCU8AAf8DUgGgBAADFAEbAwAB/wMAAf8DTAHyA1sB5AMAAf8DAAH/AzoBYgQAAzcBWgMAAf8D
        DAEPBwAB/wQAAxwB/QNeAdcDYAHhA1EBoQM2AVcDAAH/AwAB/wMAAf8DAAH/A1sB0AMVAR0DWwHQBAAD
        MAFMAw4B/iwAAw8BFAM/AW0DCwEOAwIBAwMqAUADOAFbA0IBdANBAXMDOAFbAyoBPwMCAQMDBgEIAz4B
        agMTARk0AAMqAT8BWQFcAVkBvgFDAUQBQwF3AVUBVgFVAa4BVgFZAVYBtgMFAQZMAAM9AWkDAAH/AzsB
        YwgAA0IBdANcAeYDUQHxA04BlwQBBAADIwEyAwAB/wNVAa0LAAH/BAADCwEOAwsBDgMLAQ4cAAMeASoD
        WQG7AzABTAMOAf4wAAMUARsDXAHLA0wB8gNKAYsDJgE4AxgBIQMJAQsDDgESAysEQQFzA1ABnwNfAeUD
        WgHHAxQBGzQAAy8BSQIhAZsB+wNNAZMBXQFnAV0B6gFTAXUBUwH0A04BmAFMAXABTAH1AzsBY0gAA08B
        mwMAAf8DXgHXBAEUAANWAbMDAAH/A1sBzQ8AAf8sAAMeASoDXAHnAw4B/jwAAy0BRQNSAaMDXAHZAxwB
        /AMAAf8DAAH/AxwB/ANeAdcDUAGcAykBPTwAAyMBMgJdAWABzgM/AWwBWAFaAVgBugFXAVoBVwHCA0QB
        eAFZAVwBWQHDAzIBT0wAAyYBOAMAAf8DAAH/AwAB/wNgAeEDXgHdAwAB/wMAAf8DAAH/AzoBYhAAAyYB
        OAMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMcAf3/ABkAAx4B
        KgNVAa8DUQHxA0MB9ANXAbwDKgFA/wA1AAFCAU0BPgcAAT4DAAEoAwABYAMAATADAAEBAQABAQUAAUAB
        AhYAA///ACIAAQcC/wHAAQABPwb/ASMC/wGAAQABHwT/AQEB/wExAv8BvwHjAc8B/wEQAv8BAQH/ARgC
        /wG/AeABzwH+AQEC/wEAAf8BjAF/Af8BvwHgAU8B/gEAAR8B/wEAAf8BxgE/Af8BvwHzAQ8B8gEAAR8B
        4AEAAQcB4wEfAf8BoAETAY8B8AEQAR8B/gEAAX8B8QGIAR8BqAEZAc8B5AGAAQ8B/gEAAX8B+AHAAQcB
        qAEEAecB5AEkAQcB/AEAAT8B/AFDAcMBoAEGAXMB5AEgAScB/AEAAT8B/gEPAfEBvwH/ATEB5AGBAScB
        8AEAAR8B/wEfAfgBoQH/AYAB8AEAAQ8B8AEAAQ8B/wE/AfwBqAEPAcQB8gEEAU8B8AEAAQ8B/wE/AfwB
        qAEHAcAB8QEAAQ8B/wEHAv8BPwH8AaABBwHBAeABgQEHAf8BAwL/AT8B/gG/Af8BzwHgATgBBwH/AQAC
        /wE/AfwBoQH/Ac8B8QEAAQ8B/wEAAv8BPwH8AaABDgEPAfgBYgEfAf8BAAL/ATMBzAGpAfwBHwH8AQAB
        PwH/AQMC/wGQAQgBoAEBAT8B+AEAAR8B/wEDAv8BjAERAaMB+AF/AfgBAAEfAf8BAAL/AcMB4wG/AfgB
        /wH+AQABfwH/AQAC/wHgAQcBgAEBCP8B+AEfCf8L
</value>
  </data>
</root>