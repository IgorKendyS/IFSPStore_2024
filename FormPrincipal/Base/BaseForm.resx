<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtBIAAAJNU0Z0AUkBTAIBAQQB
        AAEQAQABEAEAARgBAAEYAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFgAwABMAMAAQEBAAEgBgAB
        SP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/AP8A/wD/ADYAAwUBBgMAAf8DAAH/AwAB/wMcASdUAANAAXcDQAG5A0ABuQNAAbkDQAG5A0AB
        uQNAAbkDQAG5A0ABuQNAAbkDQAG5A0ABuQNAAbkDQAG5A0ABuQNEAZnYAAMwAdUDAgH+BAADMAHXAwAB
        /wMcASdMAAMdAeoDRQGfAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkD
        HQEpAx0BKQMdASkDOQFhAwAB/5QAAwgBCgMWAR0DEQEWAwsBDgM2AVcDFgEdAw8BFCQAAyQB5AMOAfcI
        AAMwAdcDAAH/Ax0BKEsAAf8nAAH/Ax0B6wM5AWMQAAM9AcADHQEpMAADDwEUA0MBsQMZASMEAAMWAR4D
        RAGnAxkB7QMlATdAAAMjATMDNQFVAzkBXQMoATsDOAFcAx4BKwMzAVEkAAMSARgDAAH/AzAB1ggAAzAB
        1wMAAf8DHAEnRwAB/yQAAygB4AMcAScDRAGTAwAB/wMOAfYIAANDAa8DJAE0LAAEAgNBAbQDRAGjBAED
        LAFEAzAB1QM9AW4DGQEjRAADFAEbAyABLQMTARoDDAEPAx0BKQMOARIDGwElAxMBGiQAAx0BKAMAAf8D
        MAHWCAADMAHXAwAB/wMcASdDAAH/JAADMwFTA0QBpAM4AV4DCAH6Az4BcQMOAfcEAANDAa8DJAE0LAAD
        OAFfAyoB3QMMARADOQFgAyYB4gMTARoEAgM3AVsDOwHFAxMB8gM5AcgDMwFRNAADKAE8AyIBMQE7AjwB
        ZAMsAUMDOAFcAzABSgMoATwDLgFHKAADHQEoAwAB/wMwAdYIAAMwAdcDAAH/Ax0BKD8AAf8rAAH/AwgB
        +ggAAz4BcQMOAfYDQwGvAyQBNCAAA0ABeAM4AV8EAAMzAdIDLwFKAxQBGwMTAfMDIAEtAw4BEgM9AcAD
        PgG8Ay8BSgMMBBABFQMSARggAAMCAQMDFgEdAxYBHQMWAR0DFgEdAyEBLwMkATQDGwElAxYBHQMWAR0D
        FgEdAxYBHQMWAR0DFgEdAxYBHQMWAR0DFgEdAwQBBRgAAx0BKAMAAf8DMAHWCAADMAHXAwAB/wMcASc7
        AAH/BwAB/wMAAf8DAAH/A0UBmAMLAQ4DPQFuAz0BbgM9AW4EAAMXAe4DRAGJDAADPgFxAwAB/wMkATQg
        AAM6AcYDHQEpAyMBMwMoAeAEAQNEAYkDQwGGBAADRQGhA0UBlwQBAw8BEwM4AV4DQgF/AzMBUzAAAxIB
        GAMQARUDDAEQAw4BEgMGBAcBCQMOARIDFAEbAwkBCwMPARMsAAMdASgDAAH/AzAB1wgAAzAB1wMAAf8D
        HAEnBAAEAQM8AWoDQwGtA0MBrwM/AXYDBgEHGwAB/wQAAxMB8wQAAyoBQANFAaEDDAEQAz8BdgM/AXYD
        PwF2CAADFwHuA0QBiQwAAz4BcQMOAfYcAAMGAQgDHgHpBAADPwF0A0QBjgQAAygB4AMcAScDGwElAywB
        2QQCAyUBNwMfAegDQwGHA0UBnQMWAe8DQgGBLAADHwEsAy8BSQM7AWMDJQE2AyoBPwMsAUMDNQFVAy0B
        RAM2AVgDJQE3MAADHQEoAwAB/wMwAdcIAAMwAdcDAAH/AwwB+AMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMCAf4DGwElEwAB/wQAAxMB8wQAAyoBQANFAaEDGQEiA0QBpgNEAaYDRAGmA0QBpgM9AWwEAAMXAe4D
        RAGJDAADPgFxAw4B9hgAAxsBJgM6AckEAANFAZIDPQFtAwQBBQMTAfMEAAM/AXUDRAGKBAADPQHBAy8B
        SgMCAQMDDwETAxUBHQMKAfkDDAEPJAADBgEHAxIBGAMbASUDEQEWAwMBBAMVARwDEQEWAwUBBgMMAQ8D
        CgENAwkBDAMLAQ4wAAMdASgDAAH/AzAB1gQAAzYBWgMAAf8DCAH6AxgBIRAAAwsBDgMdAeoDAAH/A0UB
        lA8AAf8HAAH/AwAB/wMAAf8DRAGMAwIBAwMpAT4DKQE+AykBPgMpAT4DFAEbCAADFwHuA0QBiQwAAz4B
        cQMOAfYUAAMhATADOQHHBAADRQGfAzsBZgMJAQwDEQH0BAADMgFQAygBOwMEAQUDEQH0AwQBBQM1AVcD
        RQGcBAADMwHSAx4BKyQAAUYBRwFIAYsDNgFYAUoBSwFMAZwBRQJGAYQBRQFGAUcBhgFHAUkBSgGTAzsB
        ZQFJAUsBTQG4AkIBQwF5AUgCSwGbAUYBRwFIAYoDMQFNNAADHQEoAwAB/wMqAd0DAAH/A0QBpyAAAzwB
        awMAAf8DQAF4CwAB/zgAAxcB7gNEAYkIAAQBAwAB/wMOAfcQAAMTARoDLAHcBAADPwF0A0QBmQQAAzkB
        xwM8AWgEAQMDAQQDRQGYAz4BvwQAA0MBhwNDAYMEAAMdAesDEAEVHAAEAQMCAQMCPAE9AWcDLwFJAzwB
        ZgM6AWEDOQFfAzoBYQMqAUABRAJFAYADHQEoAkMBRAF8AyoBPwMNAREDBQEGNAADHQEoAwAB/wM3Ac0o
        AANEAY4DAAH/AwIBAwcAAf8EAAMUAfEDFAHxAxQB8QM8AWkoAAMXAe4DRAGJBAEDAAH/Ax8BLANEAZYD
        QQF8EAADJwHfAxABFQMSARgDHQHrAxEBFgMSARcDOQHKAyQB5AMdAeoDMAHVAx0BKQMPARQDHQHrAx4B
        KwMhATADJwHfIAADGwElAkcBSQGKAUMCRAF8AkYBRwGFAUoBTAFNAaYDJwE6AzMBUgFAAkEBcwM+AWwC
        LQEuAUYCQwFEAXwDKQQ+AWwDQQF1AUIBQwFEAXsDFwEfMAADQwGGAwAB/zMAAf8DNwHLBwAB/wQAAxMB
        8wQAAyoBQANFAaEDKQE+AyQB5QMkAeUDJAHlAwQBBRgAAxYB7wMAAf8DHwEsBAADKQE+A0QBrBAAA0IB
        gQNDAYMEAAM/AXIDPwG+AwwBEAQBAx0BKQMZASMEAAMPARMDLAHZA0MBhAQAA0EBtgNDAYQgAAMTARoD
        OwFjAzkBXwEyAjMBUAJCAUMBeQIwATEBTAE8Aj0BaAM4AVwBQwJEAX0DOgFhAx0BKQM3AVsBQwJEAX0D
        NgFZAj4BPwFtAwwBDzMAAf8DPQHBMAADQQF7AwAB/wcAAf8EAAMTAfMEAAMqAUADRQGhBAEDJgE4AyYB
        OAMmATgDJgE4AxEBFhQAA0MBrwMEAfwDRAGsAzIBUAMAAf8DCwEOEAADBwEJAy0B2gMeASoEAAM+AW8D
        JgHiA0ABeAMyAVADOQFiA0QBqwMdAesDRAGKAwMBBANBAXkDJAHkAwgBCjAAAwgBCgMZASIDDwEUAxcB
        HwMYASFPAAH/Ay4BSDAAAwUBBgMAAf8HAAH/BwAB/wMAAf8DAAH/A0UBoAMbASUDRAGsA0QBrANEAawD
        RAGsAz8BchQAA0MBrwMlATYDPAFpA0UBoAMKAQ0QAANEAaQDCwEOAygBPAMzAdIDIQEvBAADFQEcAz0B
        bANDAaUDPQHAA0UBlQMVAR0EAAM9AWwDCgH5AyMBMgMNAREDPwFzLAABOAE6ATgBXAE2AZkBNwH/AU8B
        YgFPAaoBPQGPAT4B9QE2AZkBNwH/AwgBCksAAf8DFQEdNwAB/wcAAf9AAANDAa8DJQE2HAADOgFlAz0B
        wQMEAQUDEgEYA0IBswNFAZIDGgEkDAADCgENAzsBZwM5AcoDFwHuAyoBPwMFAQYDOQHHAzoBZSwAAycB
        OgFQAWQBUAGtAUABQwFAAW8BTwFfAU8BowFPAWIBTwGqAwwBEAMRARYDBgEHQwAB/wMpAT4wAAQBAwAB
        /wcAAf8EAANDAYYDQwGGA0MBhgMdASgsAANDAa8DJQE2IAADPwF0A0ABuAMSARcEAAMmATgDQwGuAyoB
        3gM5AcoDMAHXAwoB+QMsAdsDRAGTAw8EEwEaA0ABuQM+AXEwAAE4ATkBOAFbATYBmQE3Af8BTwFiAU8B
        qgE9AY8BPgH1ATYBmQE3Af8BTQFcAU0BnwE2AZkBNwH/AT0BQAE9AWlDAAH/A0QBqzAAAzoBZQMAAf8H
        AAH/BAADDgH3AzgBXgNDAYYDRQGhAzwBaAMAAf8DAAH/AwAB/wMJAQwMAANCAYEDRAGjA0QBowMmAeID
        JQE2JAADLQFGAywB2wM+AXEDEgEYCAADHgEqAx4BKwMEAQUEAAMTARoDPwF1Ay8B2AMrAUE0AAMoATwB
        UAFlAVABrgFAAUQBQQFxAU4BXgFOAaUBUAFkAVABrQE9AUABPQFoAU8BYgFPAaoDLQFEQAADRAGiAwAB
        /wgAAz0BwQMlAeMQAANFAZ0DAgH+CAADAgH+AyQB5AcAAf8EAAMTAfMEAAMqAUADRQGhHwAB/wNBAXwD
        KgFAA0QBjAMCAf4sAAMRARYDQwGDAyAB5wM5AcgDRAGnA0QBiwNEAY0DRAGnAzkBygMkAeQDQgGBAxAB
        FTgAATcBOQE3AVoBOgGZATsB/QFOAWIBUAGoAT0BkQE+AfMBOgGZATsB/QMHAQlPAAH/A0UBoAQAAxQB
        GwMAAf8DAAH/AxMB8gMkAeQDAAH/AwAB/wM5AWIEAAM2AVoDAAH/AwwBDwcAAf8EAAMEAf0DMAHXAycB
        4QNFAaEDNQFXAwAB/wMAAf8DAAH/AwAB/wM0AdADFQEdAzQB0AQAAzABTAMCAf4sAAMPARQDPQFtAwsB
        DgMCAQMDKgFAAzcBWwM/AXQDPwFzAzcBWwMqAT8DAgEDAwYBCAM8AWoDEwEZNAADKgE/AVABbQFTAb4B
        QwFIAUMBdwFOAWQBUAGuAU8BaAFPAbYDBQEGTAADPAFpAwAB/wM5AWMIAAM/AXQDIQHmAxQB8QNFAZcE
        AQQAAyMBMgMAAf8DQwGtCwAB/wQAAwsBDgMLAQ4DCwEOHAADHgEqAz4BuwMwAUwDAgH+MAADFAEbAzcB
        ywMTAfIDRAGLAyYBOAMYASEDCQELAw4BEgMrAUEDPwFzA0UBnwMkAeUDOQHHAxQBGzQAAi8BMAFJAR4B
        GwHDAfsCRwFaAZMBQwGIAUMB6gE9AZABPQH0AUwBWAFMAZgBPQGPAT4B9QE7AT0BOwFjSAADRQGbAwAB
        /wMwAdcEARQAA0IBswMAAf8DNwHNDwAB/ywAAx4BKgMgAecDAgH+PAADLQFFA0QBowMsAdkDBAH8AwAB
        /wMAAf8DBAH8AzAB1wNFAZwDKQE9PAADIwEyAkEBjAHOAj4BQwFsAVABawFQAboBTgFwAU4BwgFDAUgB
        QwF4AVABcQFQAcMBMgEzATIBT0wAAyYBOAMAAf8DAAH/AwAB/wMnAeEDKgHdAwAB/wMAAf8DAAH/AzkB
        YhAAAyYBOAMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMEAf3/
        ABkAAx4BKgNDAa8DFAHxAxEB9AM+AbwDKgFA/wA1AAFCAU0BPgcAAT4DAAEoAwABYAMAATADAAEBAQAB
        AQUAAUABAhYAA///ACIAAQcC/wHAAQABPwb/ASMC/wGAAQABHwT/AQEB/wExAv8BvwHjAc8B/wEQAv8B
        AQH/ARgC/wG/AeABzwH+AQEC/wEAAf8BjAF/Af8BvwHgAU8B/gEAAR8B/wEAAf8BxgE/Af8BvwHzAQ8B
        8gEAAR8B4AEAAQcB4wEfAf8BoAETAY8B8AEQAR8B/gEAAX8B8QGIAR8BqAEZAc8B5AGAAQ8B/gEAAX8B
        +AHAAQcBqAEEAecB5AEkAQcB/AEAAT8B/AFDAcMBoAEGAXMB5AEgAScB/AEAAT8B/gEPAfEBvwH/ATEB
        5AGBAScB8AEAAR8B/wEfAfgBoQH/AYAB8AEAAQ8B8AEAAQ8B/wE/AfwBqAEPAcQB8gEEAU8B8AEAAQ8B
        /wE/AfwBqAEHAcAB8QEAAQ8B/wEHAv8BPwH8AaABBwHBAeABgQEHAf8BAwL/AT8B/gG/Af8BzwHgATgB
        BwH/AQAC/wE/AfwBoQH/Ac8B8QEAAQ8B/wEAAv8BPwH8AaABDgEPAfgBYgEfAf8BAAL/ATMBzAGpAfwB
        HwH8AQABPwH/AQMC/wGQAQgBoAEBAT8B+AEAAR8B/wEDAv8BjAERAaMB+AF/AfgBAAEfAf8BAAL/AcMB
        4wG/AfgB/wH+AQABfwH/AQAC/wHgAQcBgAEBCP8B+AEfCf8L
</value>
  </data>
</root>